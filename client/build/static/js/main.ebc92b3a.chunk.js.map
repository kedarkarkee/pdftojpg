{"version":3,"sources":["containers/pdf/PdfConverter.module.css","components/uifileinput.module.css","components/spinner.module.css","components/lists/l.module.css","containers/video/Video.module.css","components/uifileinput.tsx","components/spinner.tsx","utils/axios.ts","components/lists/lists.tsx","containers/video/Video.tsx","containers/pdf/PdfConverter.tsx","containers/video/single/Single.tsx","containers/layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","UiFileInputButton","props","fileInputRef","React","useRef","formRef","ref","type","onClick","current","click","className","classes","Button","label","accept","acceptedFileTypes","multiple","allowMultipleFiles","name","uploadFileName","onChange","event","target","files","length","formData","FormData","Array","from","forEach","file","append","reset","style","display","defaultProps","Spinner","baseURL","clientUrl","instance","axios","create","MyList","ulClasses","W3ul","W3Card4","join","imgClasses","BarItem","Circle","HideSmall","Img","histories","map","h","humanReadableDate","Date","timestamp","toLocaleDateString","day","month","year","hour","minute","convertMessage","converted","finished","total","Bar","href","fileName","download","src","iconName","alt","to","id","Large","Trash","deletePDF","Converting","sizeOptions","value","validateSize","splitted","split","width","height","isWidthValid","isHeightValid","isNaN","Number","VideoConverter","useState","isUploading","setIsUploading","uploadProgress","setUploadProgress","error","setError","keepDAR","setKeepDAR","sameThumbnail","setSameThumbnail","currentSize","setCurrentSize","currentThumbnailSize","setCurrentThumbnailSize","setHistories","handleButton","a","sizes","thumbnailSizes","size","push","JSON","stringify","config","responseType","headers","onUploadProgress","e","_progress","loaded","toFixed","post","getHistory","get","response","data","downloadVideo","blob","Blob","fileDownload","deleteVideo","delete","dClasses","Centered","spinner","progressMessage","historyButton","sizeSelects","SelectContainer","placeholder","VideoSelect","isMulti","options","thumbnailSizeSelects","ThumbSelect","isDisabled","errorMessage","historyList","downloadHandler","Grouped","UploadButton","Switch","checked","Clearfix","PdfConverter","imgUrls","setImgUrls","handleAllDownloads","url","handleDownload","handleZipDownloads","fileNames","substring","lastIndexOf","zipName","imageUrls","downloadAllButton","downloadZipButton","i","Responsive","Gallery","rel","getResolution","r","rs","withRouter","match","params","videos","setVideos","useEffect","then","res","Right","convertedVideos","filter","v","isThumbnail","generatedThumbnails","items","resolution","thumbItems","layout","routes","path","component","SingleVideo","exact","App","Layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebc92b3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"PdfConverter_Gallery__2ig8c\",\"Desc\":\"PdfConverter_Desc__2d_2y\",\"Responsive\":\"PdfConverter_Responsive__2PbCB\",\"Clearfix\":\"PdfConverter_Clearfix__22sNi\",\"Button\":\"PdfConverter_Button__2Us6n\",\"UploadButton\":\"PdfConverter_UploadButton__1ODs1\",\"Centered\":\"PdfConverter_Centered__3Jgev\",\"Grouped\":\"PdfConverter_Grouped__1mojt\",\"Switch\":\"PdfConverter_Switch__UDree\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"uifileinput_Button__2taRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"spinner_Spinner__1P0xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Img\":\"l_Img__1JBvO\",\"Button\":\"l_Button__3o1ZD\",\"W3ul\":\"l_W3ul__1BrWz\",\"Bar\":\"l_Bar__2W4XG\",\"BarItem\":\"l_BarItem__26_3X\",\"w3-hide\":\"l_w3-hide__3DZKR\",\"w3-hide-large\":\"l_w3-hide-large__1xZqO\",\"w3-display-right\":\"l_w3-display-right__MVP26\",\"Circle\":\"l_Circle__3rzn0\",\"w3-card\":\"l_w3-card__3ee7w\",\"w3-card-2\":\"l_w3-card-2__2Wtl6\",\"W3Card4\":\"l_W3Card4__1LFfU\",\"w3-small\":\"l_w3-small__zOA5h\",\"Large\":\"l_Large__1eEp_\",\"Xlarge\":\"l_Xlarge__2qk8o\",\"Right\":\"l_Right__3E8oy\",\"White\":\"l_White__11OSF\",\"Trash\":\"l_Trash__1XWdS\",\"Converting\":\"l_Converting__3cH6p\",\"w3-spin\":\"l_w3-spin__3HIB6\",\"fading\":\"l_fading__JOTEx\",\"opac\":\"l_opac__oC9HD\",\"animatetop\":\"l_animatetop__2bngh\",\"animateleft\":\"l_animateleft__NC34X\",\"animateright\":\"l_animateright__3YH2F\",\"animatebottom\":\"l_animatebottom__14fV8\",\"animatezoom\":\"l_animatezoom__24MAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Video_Gallery__2ZM7w\",\"Desc\":\"Video_Desc__kx_hS\",\"Responsive\":\"Video_Responsive__10hNa\",\"Clearfix\":\"Video_Clearfix__2P2t9\",\"Button\":\"Video_Button__1SOW9\",\"UploadButton\":\"Video_UploadButton__2vdbY\",\"Centered\":\"Video_Centered__1e0om\",\"Grouped\":\"Video_Grouped__nQDDq\",\"Switch\":\"Video_Switch__1YWI8\",\"SelectContainer\":\"Video_SelectContainer__3nOsK\",\"VideoSelect\":\"Video_VideoSelect__2Wl-3\",\"ThumbSelect\":\"Video_ThumbSelect__12e6l\",\"Inputs\":\"Video_Inputs__2w6Sl\"};","import React from \"react\";\r\nimport classes from './uifileinput.module.css';\r\n\r\nexport interface IProps {\r\n    acceptedFileTypes?: string;\r\n    allowMultipleFiles?: boolean;\r\n    label: string;\r\n    onChange: (formData: FormData) => void;\r\n    uploadFileName: string;\r\n  }\r\n  \r\n  export const UiFileInputButton: React.FC<IProps> = (props) => {\r\n    const fileInputRef = React.useRef<HTMLInputElement | null>(null);\r\n    const formRef = React.useRef<HTMLFormElement | null>(null);\r\n  \r\n    const onClickHandler = () => {\r\n      fileInputRef.current?.click();\r\n    };\r\n  \r\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (!event.target.files?.length) {\r\n        return;\r\n      }\r\n  \r\n      const formData = new FormData();  \r\n      Array.from(event.target.files).forEach((file) => {\r\n        formData.append(event.target.name, file);\r\n      });\r\n  \r\n      props.onChange(formData);\r\n  \r\n      formRef.current?.reset();\r\n    };\r\n  \r\n    return (\r\n      <form ref={formRef}>\r\n        <button type=\"button\" onClick={onClickHandler} className={classes.Button}>\r\n          {props.label}\r\n        </button>\r\n        <input\r\n          accept={props.acceptedFileTypes}\r\n          multiple={props.allowMultipleFiles}\r\n          name={props.uploadFileName}\r\n          onChange={onChangeHandler}\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  UiFileInputButton.defaultProps = {\r\n    acceptedFileTypes: '',\r\n    allowMultipleFiles: false,\r\n  };","import classes from './spinner.module.css';\r\n\r\nfunction Spinner(){\r\n    return (\r\n        <div className={classes.Spinner}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    );\r\n}\r\nexport default Spinner;","import axios from 'axios';\r\n\r\n// export const baseURL = 'http://localhost:5000';\r\nexport const baseURL = 'http://3.15.93.104:8080';\r\n// export const clientUrl = 'http://localhost:3000';\r\nexport const clientUrl = 'http://3.15.93.104:8080';\r\nconst instance = axios.create({\r\nbaseURL,\r\n});\r\n\r\nexport default instance;","import { Link } from 'react-router-dom';\r\nimport classes from './l.module.css';\r\nimport {baseURL} from '../../utils/axios';\r\nimport historyType from '../../interfaces/history';\r\ninterface propType {\r\n    histories: historyType[];\r\n    downloadHandler: (name: string) => void;\r\n    convertExisting?: (name: string) => void;\r\n    deletePDF: (id: number) => void;\r\n    iconName: string;\r\n}\r\n\r\nfunction MyList(props: propType) {\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img].join(' ');\r\n    return (\r\n        <ul className={ulClasses}>\r\n            {props.histories.map(h => {\r\n                const humanReadableDate = new Date(h.timestamp).toLocaleDateString('en-US', {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                });\r\n                let convertMessage = '';\r\n                if(h.converted === 0){\r\n                    convertMessage = `Converting ${h.finished} of ${h.total}`;\r\n                } else if (h.converted === 2){\r\n                    convertMessage = 'Error';\r\n                }\r\n                return (<li className={classes.Bar} key={h.id}>\r\n                    <a href={baseURL + '/uploads/videos/' + h.fileName} download>\r\n\r\n                <img src={baseURL + \"/assets/\" + props.iconName} alt=\"pdf icon\" className={imgClasses} />\r\n                    </a>\r\n                    <Link to={`/video/${h.id}`}>\r\n                    <div className={classes.BarItem}>\r\n                        <span className={classes.Large}>{h.fileName}</span><br />\r\n                        <span>{humanReadableDate}</span>\r\n                    </div>\r\n                    </Link>\r\n                    <span className={classes.Trash} onClick={() => props.deletePDF(h.id)}></span>\r\n                    {h.converted !== 1 ? <span className={classes.Converting}>{convertMessage}</span> : null}\r\n                </li>);\r\n            })}\r\n\r\n        </ul>\r\n    );\r\n}\r\nexport default MyList;","import { AxiosRequestConfig } from 'axios';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { OptionsType } from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { UiFileInputButton } from '../../components/uifileinput';\r\nimport Spinner from '../../components/spinner';\r\nimport fileDownload from 'js-file-download';\r\nimport classes from './Video.module.css';\r\nimport instance, {clientUrl } from '../../utils/axios';\r\nimport MyList from '../../components/lists/lists';\r\nimport historyType from '../../interfaces/history';\r\ntype sizeType = {\r\n    value: string;\r\n    label: string;\r\n};\r\nconst sizeOptions: sizeType[] = [\r\n    { value: '?x240', label: '240p' },\r\n    { value: '?x480', label: '480p' },\r\n    { value: '?x720', label: '720p' },\r\n    { value: '?x1080', label: '1080p' },\r\n    { value: '?x2160', label: '2160p' }\r\n];\r\n\r\nconst validateSize = (value: string): boolean => {\r\n    const splitted = value.split('x');\r\n    const width = splitted[0];\r\n    const height = splitted[1];\r\n    if (!width || !height) return false;\r\n    if (width === '?' && height === '?') return false;\r\n    let isWidthValid = false;\r\n    let isHeightValid = false;\r\n    if (width === '?') {\r\n        isWidthValid = true;\r\n    } else {\r\n        isWidthValid = !isNaN(Number(width));\r\n    }\r\n    if (height === '?') {\r\n        isHeightValid = true;\r\n    } else {\r\n        isHeightValid = !isNaN(Number(height));\r\n    }\r\n    return isWidthValid && isHeightValid;\r\n}\r\n\r\nfunction VideoConverter() {\r\n    const [isUploading, setIsUploading] = useState<boolean>(false);\r\n    // const [isDownloading, setIsDownloading] = useState<boolean>(false);\r\n    // const [isConverting, setIsConverting] = useState<boolean>(false);\r\n    const [uploadProgress, setUploadProgress] = useState<number>(0);\r\n    // const [downloadProgress, setDownloadProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [keepDAR, setKeepDAR] = useState<boolean>(true);\r\n    const [sameThumbnail, setSameThumbnail] = useState<boolean>(false);\r\n    // const [progress, setProgress] = useState<string>('0');\r\n    const [currentSize, setCurrentSize] = useState<OptionsType<sizeType>>([]);\r\n    const [currentThumbnailSize, setCurrentThumbnailSize] = useState<OptionsType<sizeType>>([]);\r\n    const [histories, setHistories] = useState<historyType[]>([]);\r\n\r\n    const handleSizeChange = (options: OptionsType<sizeType>) => {\r\n        setCurrentSize(options);\r\n    }\r\n\r\n    const handleThumbnailSizeChange = (options: OptionsType<sizeType>) => {\r\n        setCurrentThumbnailSize(options);\r\n    }\r\n    const handleButton = async (formData: FormData) => {\r\n        const sizes = [];\r\n        let thumbnailSizes = [];\r\n        for(let size of currentSize as any[]){\r\n            if(size['__isNew__']){\r\n                if(!validateSize(size.value)){\r\n                    setError(`Invalid Video Resolution Detected. ${size.value}`);\r\n                    return;\r\n                }\r\n                sizes.push(size.value);\r\n            } else {\r\n                sizes.push(size.value);\r\n            }\r\n        }\r\n        if(sameThumbnail){\r\n            thumbnailSizes = [...sizes];\r\n        } else {\r\n            for(let size of currentThumbnailSize as any[]){\r\n                if(size['__isNew__']){\r\n                    if(!validateSize(size.value)){\r\n                        setError(`Invalid Thumbnail Resolution Detected. ${size.value}`);\r\n                        return;\r\n                    }\r\n                    thumbnailSizes.push(size.value);\r\n                } else {\r\n                    thumbnailSizes.push(size.value);\r\n                }\r\n            }\r\n        }\r\n        setError(null);\r\n\r\n        formData.append('sizes', JSON.stringify(sizes));\r\n        formData.append('thumbnailSizes', JSON.stringify(thumbnailSizes));\r\n        formData.append('keepDAR', `${keepDAR}`);\r\n        setIsUploading(true);\r\n        setUploadProgress(0);\r\n        // setProgress('0');\r\n        const config: AxiosRequestConfig = {\r\n            // responseType: 'blob',\r\n            responseType: 'json',\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n            onUploadProgress: (e) => {\r\n                const _progress = e.loaded * 100 / e.total;\r\n                if (_progress < 99) {\r\n                    setUploadProgress(Number(_progress.toFixed(2)));\r\n                } else {\r\n                    setIsUploading(false);\r\n                    setUploadProgress(0);\r\n                }\r\n\r\n            },\r\n            // onDownloadProgress: (e) => {\r\n            //     if (!isDownloading) {\r\n            //         setIsDownloading(true);\r\n            //     }\r\n            //     const _progress = Number((e.loaded * 100 / e.total).toFixed(2));\r\n            //     setDownloadProgress(_progress);\r\n            // }\r\n        };\r\n        // const fileName = (formData.get('video')! as any).name as string;\r\n        // const socket = socketIOClient(baseURL, {\r\n        //     withCredentials: true,\r\n        // }\r\n        // );\r\n\r\n        // socket.on('connect', async () => {\r\n        //     socket.on('PROGRESS', data => {\r\n        //         setProgress(data.toFixed(2));\r\n        //     });\r\n        //     // formData.append('socketId', socket.id);\r\n        //     // const response = await instance.post('videoconvert/resize', formData, config);\r\n        //     // socket.disconnect();\r\n        //     // setIsConverting(false);\r\n        //     // setIsDownloading(false);\r\n        //     // console.log(response.data);\r\n        //     // const blob = new Blob([response.data]);\r\n        //     // fileDownload(blob, (formData.get('video')! as any).name);\r\n        // });\r\n       await instance.post('videoconvert/resize', formData, config);\r\n        // socket.disconnect();\r\n        // setIsConverting(false);\r\n        // setIsDownloading(false);\r\n        // const blob = new Blob([response.data]);\r\n        // fileDownload(blob, (formData.get('video')! as any).name);\r\n\r\n    }\r\n    const getHistory = async () => {\r\n        setIsUploading(true);\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n\r\n        };\r\n        const response = await instance.get('history/video', config);\r\n        setIsUploading(false);\r\n        setHistories(response.data.files);\r\n    }\r\n    const downloadVideo = async (fileName: string) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'blob',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        const response = await instance.get('files/video/' + fileName, config);\r\n        const blob = new Blob([response.data]);\r\n        fileDownload(blob, fileName);\r\n    }\r\n    const deleteVideo = async (id: number) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        await instance.delete('files/video/' + id, config);\r\n        const response = await instance.get('history/video');\r\n        setIsUploading(false);\r\n        setHistories(response.data.files);\r\n\r\n    }\r\n    const dClasses = [classes.Centered, classes.Button].join(' ');\r\n    let spinner = null;\r\n    let progressMessage = null;\r\n    let downloadAllButton = null;\r\n    let downloadZipButton = null;\r\n    let historyButton = null;\r\n    if (isUploading) {\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = uploadProgress !== 0 ? <div className={classes.Centered}>{uploadProgress}% Uploaded</div> : null;\r\n    }\r\n    else {\r\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\r\n    }\r\n    const sizeSelects = (\r\n        <div className={classes.SelectContainer}>\r\n        <CreatableSelect placeholder='Select Video Resolutions' className={classes.VideoSelect} isMulti options={sizeOptions}  onChange={handleSizeChange} />\r\n    </div>\r\n    );\r\n    const thumbnailSizeSelects = (\r\n        <div className={classes.SelectContainer}>\r\n        <CreatableSelect placeholder='Select Thumbnail Resolutions' className={classes.ThumbSelect} isMulti options={sizeOptions}  onChange={handleThumbnailSizeChange} isDisabled={sameThumbnail} />\r\n    </div>\r\n    );\r\n\r\n    let errorMessage = null;\r\n    if (error) {\r\n        errorMessage = <div className={classes.Centered}>{error}</div>;\r\n    }\r\n    const historyList = histories.length !== 0 ? <div className={classes.Centered}><MyList iconName='video.png' histories={histories} downloadHandler={downloadVideo} deletePDF={deleteVideo} /></div> : null;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.Grouped}>\r\n                <div className={classes.UploadButton}>\r\n                    <UiFileInputButton\r\n                        label=\"Upload Video\"\r\n                        uploadFileName=\"video\"\r\n                        onChange={handleButton}\r\n                        acceptedFileTypes=\"video/*\"\r\n                    />\r\n                </div>\r\n                <Link to='/'>\r\n                    <div className={classes.Switch}>PDF Converter</div>\r\n                </Link>\r\n            </div>\r\n            {errorMessage}\r\n            <div className={classes.Centered}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={keepDAR} onChange={(e) => setKeepDAR(e.target.checked)} />\r\n                    Keep Aspect Ratio\r\n                </label>\r\n            </div>\r\n            <div className={classes.Centered}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={sameThumbnail} onChange={(e) => setSameThumbnail(e.target.checked)} />\r\n                    Generate thumbnail same as video resolutions\r\n                </label>\r\n            </div>\r\n            {sizeSelects}\r\n            {thumbnailSizeSelects}\r\n            {spinner}\r\n            {progressMessage}\r\n            <div className={classes.Centered}>\r\n                {downloadAllButton}\r\n                {downloadZipButton}\r\n                {historyButton}\r\n            </div>\r\n            {historyList}\r\n\r\n            <div className={classes.Clearfix}></div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default VideoConverter;","import { AxiosRequestConfig } from 'axios';\nimport { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { UiFileInputButton } from '../../components/uifileinput';\nimport Spinner from '../../components/spinner';\nimport fileDownload from 'js-file-download';\nimport classes from './PdfConverter.module.css';\nimport MyList from '../../components/lists/lists';\nimport instance, {clientUrl} from '../../utils/axios';\n\nfunction PdfConverter() {\n    const [imgUrls, setImgUrls] = useState<string[]>([]);\n    const [isUploading, setIsUploading] = useState<boolean>(false);\n    const [histories, setHistories] = useState<{ name: string; time: number }[]>([]);\n    const handleAllDownloads = async () => {\n\n        for (let url of imgUrls) {\n            await handleDownload(url);\n        }\n    }\n    const handleZipDownloads = async () => {\n        let fileNames: string[] = [];\n        for (let url of imgUrls) {\n            fileNames.push(url.substring(url.lastIndexOf('/') + 1));\n        }\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.post('convert/zip', { fileNames }, config);\n        const blob = new Blob([response.data]);\n        const zipName = fileNames[0].split('-')[0];\n        fileDownload(blob, zipName.split('.')[0] + '.zip');\n    }\n    const handleDownload = async (url: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n            },\n        };\n        const fileName = url.substring(url.lastIndexOf('/'));\n\n        const response = await instance.get('files/images' + fileName, config);\n        const blob = new Blob([response.data], { type: 'image/jpg' });\n        fileDownload(blob, fileName.substring(1));\n    }\n\n    const handleButton = async (formData: any) => {\n        setIsUploading(true);\n        setImgUrls([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n\n        const response = await instance.post('convert/jpg', formData, config);\n        setIsUploading(false);\n        setImgUrls(response.data.imageUrls);\n    }\n    const getHistory = async () => {\n        setIsUploading(true);\n        setImgUrls([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n\n        };\n        const response = await instance.get('history/pdf', config);\n        setIsUploading(false);\n        setHistories(response.data.files);\n    }\n    const downloadPDF = async (fileName: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.get('files/pdf/' + fileName.replace('.pdf', ''), config);\n        const blob = new Blob([response.data]);\n        fileDownload(blob, fileName);\n    }\n    const convertExisting = async (fileName: string) => {\n        setIsUploading(true);\n        setImgUrls([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.get('convert/jpg/' + fileName.replace('.pdf', ''), config);\n        setIsUploading(false);\n        setImgUrls(response.data.imageUrls);\n    }\n    const deletePDF = async (fileName: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        await instance.delete('files/pdf/' + fileName.replace('.pdf', ''), config);\n        const response = await instance.get('history/pdf');\n        setIsUploading(false);\n        setHistories(response.data.files);\n\n    }\n    const dClasses = [classes.Centered, classes.Button].join(' ');\n    let spinner = null;\n    let downloadAllButton = null;\n    let downloadZipButton = null;\n    let historyButton = null;\n    if (isUploading) {\n        spinner = <div className={classes.Centered}><Spinner /></div>;\n    } else {\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\n        if (imgUrls.length !== 0) {\n            downloadAllButton = <div className={dClasses} onClick={() => handleAllDownloads()}>Download All</div>;\n            downloadZipButton = <div className={dClasses} onClick={() => handleZipDownloads()}>Download As Zip</div>;\n        }\n    }\n    // const historyList = histories.length !== 0 ? <div className={classes.Centered}><MyList iconName='pdf.png' histories={histories} downloadHandler={downloadPDF} convertExisting={convertExisting} deletePDF={deletePDF} /></div> : null;\n\n\n    return (\n        <div>\n            <div className={classes.Grouped}>\n            <div className={classes.UploadButton}>\n                <UiFileInputButton\n                    label=\"Upload PDF\"\n                    uploadFileName=\"pdf\"\n                    onChange={handleButton}\n                    acceptedFileTypes=\".pdf\"\n                />\n            </div>\n            <Link to='/video'>\n            <div className={classes.Switch}>Video Converter</div>\n            </Link>\n            </div>\n            {spinner}\n            <div className={classes.Centered}>\n                {downloadAllButton}\n                {downloadZipButton}\n                {historyButton}\n            </div>\n\n            {/* {historyList} */}\n            <div className={classes.Centered}>\n                {\n                    imgUrls.map((url, i) => {\n                        return (\n                            <div className={classes.Responsive} key={i}>\n                                <div className={classes.Gallery}>\n                                    <a target=\"_blank\" rel='noreferrer' href={url}>\n                                        <img src={url} alt={url} width=\"600\" height=\"400\" />\n                                    </a>\n                                    <div className={classes.Button} onClick={() => handleDownload(url)}>Download Page {i + 1}</div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n            <div className={classes.Clearfix}></div>\n\n        </div>\n    );\n}\n\nexport default PdfConverter;","import { AxiosRequestConfig } from 'axios';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport instance, { baseURL, clientUrl } from '../../../utils/axios';\r\nimport converted from '../../../interfaces/converted';\r\nimport classes from '../../../components/lists/l.module.css';\r\n\r\nconst getResolution = (r: string) => {\r\nconst rs = r.split('x');\r\nif(rs[0] === '?') return `${rs[1]}p`;\r\nreturn rs[0] + ' x ' + rs[1];\r\n}\r\n\r\nfunction SingleVideo(props: RouteComponentProps<{ id: string }>): ReactElement {\r\n    const { id } = props.match.params;\r\n    const [videos, setVideos] = useState<converted[]>([]);\r\n    useEffect(() => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n\r\n        };\r\n        instance.get('videoconvert/converted/' + id, config).then((res) => {\r\n            setVideos(res.data);\r\n        });\r\n    }, [id]);\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img,classes.Right].join(' ');\r\n    const convertedVideos = videos.filter(v => v.isThumbnail === 0);\r\n    const generatedThumbnails = videos.filter(v => v.isThumbnail === 1);\r\n    const items = convertedVideos.map(v => <li className={classes.Bar} key={v.id}>\r\n        {/* <img src={baseURL + \"/assets/\" + props.iconName} alt=\"pdf icon\" className={imgClasses} onClick={() => props.downloadHandler(h.filePath)} /> */}\r\n            <div className={classes.BarItem}>\r\n                <span className={classes.Large}>{v.fileName}</span><br />\r\n                <span>{getResolution(v.resolution)}</span>\r\n            </div>\r\n            <a href={baseURL + '/output/videos/' + v.fileName} download>\r\n            <img src={baseURL + \"/assets/download.png\"} alt=\"download\" className={imgClasses} />\r\n            </a>\r\n        </li>);\r\n    const thumbItems = generatedThumbnails.map(v => <li className={classes.Bar} key={v.id}>\r\n        {/* <img src={baseURL + \"/assets/\" + props.iconName} alt=\"pdf icon\" className={imgClasses} onClick={() => props.downloadHandler(h.filePath)} /> */}\r\n            <div className={classes.BarItem}>\r\n                <span className={classes.Large}>{v.fileName}</span><br />\r\n                <span>{getResolution(v.resolution)}</span>\r\n            </div>\r\n            <a href={baseURL + '/output/thumbnails/' + v.fileName} download>\r\n            <img src={baseURL + \"/assets/download.png\"} alt=\"download\" className={imgClasses} />\r\n            </a>\r\n        </li>);\r\n    return (\r\n        <>\r\n        <div>\r\n            <h3>Converted Videos</h3>\r\n        </div>\r\n        <ul className={ulClasses}>\r\n            {items}\r\n        </ul>\r\n        <div>\r\n            <h3>Generated Thumbnails</h3>\r\n        </div>\r\n        <ul className={ulClasses}>\r\n            {thumbItems}\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(SingleVideo);","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport VideoConverter from \"../video/Video\";\r\nimport PdfConverter from \"../pdf/PdfConverter\";\r\nimport SingleVideo from \"../video/single/Single\";\r\n\r\nconst layout = () => {\r\n    const routes = (\r\n        <Switch>\r\n            <Route path=\"/video/:id\" component={SingleVideo} />\r\n            <Route path=\"/video\" component={VideoConverter} />\r\n            <Route path=\"/\" exact component={PdfConverter} />\r\n        </Switch>\r\n    );\r\n    return (\r\n        <>\r\n            <main>\r\n                {routes}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default layout;","import React from 'react';\r\nimport Layout from \"./containers/layout/Layout\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n                <Layout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}