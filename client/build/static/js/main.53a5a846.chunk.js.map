{"version":3,"sources":["components/lists/l.module.css","components/uifileinput.tsx","components/spinner.tsx","utils/axios.ts","components/lists/lists.tsx","containers/video/Video.tsx","containers/pdf/PdfConverter.tsx","containers/layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx","containers/video/Video.module.css","components/uifileinput.module.css","components/spinner.module.css","containers/pdf/PdfConverter.module.css"],"names":["module","exports","UiFileInputButton","props","fileInputRef","React","useRef","formRef","ref","type","onClick","current","click","className","classes","Button","label","accept","acceptedFileTypes","multiple","allowMultipleFiles","name","uploadFileName","onChange","event","target","files","length","formData","FormData","Array","from","forEach","file","append","reset","style","display","defaultProps","Spinner","baseURL","clientUrl","instance","axios","create","MyList","ulClasses","W3ul","W3Card4","join","imgClasses","BarItem","Circle","HideSmall","Img","histories","map","h","humanReadableDate","Date","time","toLocaleDateString","day","month","year","hour","minute","Bar","src","iconName","alt","downloadHandler","convertExisting","Large","Trash","deletePDF","sizeOptions","value","width","height","validateSize","isWidthValid","isHeightValid","isNaN","Number","VideoConverter","useState","isUploading","setIsUploading","isDownloading","setIsDownloading","isConverting","setIsConverting","uploadProgress","setUploadProgress","downloadProgress","setDownloadProgress","error","setError","keepDAR","setKeepDAR","progress","setProgress","currentSize","setCurrentSize","setHistories","handleCustomSize","handleButton","a","config","responseType","headers","onUploadProgress","e","_progress","loaded","total","toFixed","onDownloadProgress","socket","socketIOClient","withCredentials","on","data","id","post","response","disconnect","blob","Blob","fileDownload","get","fileName","body","size","socketId","getHistory","downloadVideo","deleteVideo","delete","dClasses","Centered","spinner","progressMessage","historyButton","customSizeInputs","Inputs","errorMessage","historyList","Grouped","UploadButton","to","Switch","checked","SelectContainer","Select","options","defaultValue","isSearchable","Clearfix","PdfConverter","imgUrls","setImgUrls","handleAllDownloads","url","handleDownload","handleZipDownloads","fileNames","push","substring","lastIndexOf","zipName","split","imageUrls","downloadPDF","replace","downloadAllButton","downloadZipButton","i","Responsive","Gallery","rel","href","layout","routes","path","component","exact","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53a5a846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Img\":\"l_Img__1JBvO\",\"Button\":\"l_Button__3o1ZD\",\"W3ul\":\"l_W3ul__1BrWz\",\"Bar\":\"l_Bar__2W4XG\",\"BarItem\":\"l_BarItem__26_3X\",\"w3-hide\":\"l_w3-hide__3DZKR\",\"w3-hide-large\":\"l_w3-hide-large__1xZqO\",\"w3-display-right\":\"l_w3-display-right__MVP26\",\"Circle\":\"l_Circle__3rzn0\",\"w3-card\":\"l_w3-card__3ee7w\",\"w3-card-2\":\"l_w3-card-2__2Wtl6\",\"W3Card4\":\"l_W3Card4__1LFfU\",\"w3-small\":\"l_w3-small__zOA5h\",\"Large\":\"l_Large__1eEp_\",\"Xlarge\":\"l_Xlarge__2qk8o\",\"Right\":\"l_Right__3E8oy\",\"White\":\"l_White__11OSF\",\"Trash\":\"l_Trash__1XWdS\",\"w3-spin\":\"l_w3-spin__3HIB6\",\"fading\":\"l_fading__JOTEx\",\"opac\":\"l_opac__oC9HD\",\"animatetop\":\"l_animatetop__2bngh\",\"animateleft\":\"l_animateleft__NC34X\",\"animateright\":\"l_animateright__3YH2F\",\"animatebottom\":\"l_animatebottom__14fV8\",\"animatezoom\":\"l_animatezoom__24MAU\"};","import React from \"react\";\r\nimport classes from './uifileinput.module.css';\r\n\r\nexport interface IProps {\r\n    acceptedFileTypes?: string;\r\n    allowMultipleFiles?: boolean;\r\n    label: string;\r\n    onChange: (formData: FormData) => void;\r\n    uploadFileName: string;\r\n  }\r\n  \r\n  export const UiFileInputButton: React.FC<IProps> = (props) => {\r\n    const fileInputRef = React.useRef<HTMLInputElement | null>(null);\r\n    const formRef = React.useRef<HTMLFormElement | null>(null);\r\n  \r\n    const onClickHandler = () => {\r\n      fileInputRef.current?.click();\r\n    };\r\n  \r\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (!event.target.files?.length) {\r\n        return;\r\n      }\r\n  \r\n      const formData = new FormData();  \r\n      Array.from(event.target.files).forEach((file) => {\r\n        formData.append(event.target.name, file);\r\n      });\r\n  \r\n      props.onChange(formData);\r\n  \r\n      formRef.current?.reset();\r\n    };\r\n  \r\n    return (\r\n      <form ref={formRef}>\r\n        <button type=\"button\" onClick={onClickHandler} className={classes.Button}>\r\n          {props.label}\r\n        </button>\r\n        <input\r\n          accept={props.acceptedFileTypes}\r\n          multiple={props.allowMultipleFiles}\r\n          name={props.uploadFileName}\r\n          onChange={onChangeHandler}\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  UiFileInputButton.defaultProps = {\r\n    acceptedFileTypes: '',\r\n    allowMultipleFiles: false,\r\n  };","import classes from './spinner.module.css';\r\n\r\nfunction Spinner(){\r\n    return (\r\n        <div className={classes.Spinner}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    );\r\n}\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nexport const baseURL = 'http://3.15.93.104:8080';\r\nexport const clientUrl = 'http://3.15.93.104:8080';\r\nconst instance = axios.create({\r\nbaseURL,\r\n});\r\n\r\nexport default instance;","import classes from './l.module.css';\r\nimport {baseURL} from '../../utils/axios';\r\ninterface propType {\r\n    histories: {\r\n        name: string;\r\n        time: number;\r\n    }[];\r\n    downloadHandler: (name: string) => void;\r\n    convertExisting: (name: string) => void;\r\n    deletePDF: (name: string) => void;\r\n    iconName: string;\r\n}\r\n\r\nfunction MyList(props: propType) {\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img].join(' ');\r\n    return (\r\n        <ul className={ulClasses}>\r\n            {props.histories.map(h => {\r\n                const humanReadableDate = new Date(h.time).toLocaleDateString('en-US', {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                });\r\n                return (<li className={classes.Bar} key={h.name}>\r\n                <img src={baseURL + \"/assets/\" + props.iconName} alt=\"pdf icon\" className={imgClasses} onClick={() => props.downloadHandler(h.name)} />\r\n                    <div className={classes.BarItem} onClick={()=>props.convertExisting(h.name)}>\r\n                        <span className={classes.Large}>{h.name}</span><br />\r\n                        <span>{humanReadableDate}</span>\r\n                    </div>\r\n                    <span className={classes.Trash} onClick={() => props.deletePDF(h.name)}></span>\r\n                </li>);\r\n            })}\r\n\r\n        </ul>\r\n    );\r\n}\r\nexport default MyList;","import { AxiosRequestConfig } from 'axios';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { UiFileInputButton } from '../../components/uifileinput';\r\nimport Spinner from '../../components/spinner';\r\nimport fileDownload from 'js-file-download';\r\nimport classes from './Video.module.css';\r\nimport instance, { baseURL, clientUrl } from '../../utils/axios';\r\nimport MyList from '../../components/lists/lists';\r\n\r\ntype sizeType = {\r\n    value: { width: string, height: string; };\r\n    label: string;\r\n};\r\nconst sizeOptions: sizeType[] = [\r\n    { value: { width: '?', height: '240' }, label: '240p' },\r\n    { value: { width: '?', height: '480' }, label: '480p' },\r\n    { value: { width: '?', height: '720' }, label: '720p' },\r\n    { value: { width: '?', height: '1080' }, label: '1080p' },\r\n    { value: { width: '?', height: '2160' }, label: '2160p' },\r\n    { value: { width: '?', height: '?' }, label: 'Custom Size' }\r\n];\r\n\r\nconst validateSize = ({ value }: sizeType): boolean => {\r\n    if (value.width === '?' && value.height === '?') return false;\r\n    let isWidthValid = false;\r\n    let isHeightValid = false;\r\n    if (value.width === '?') {\r\n        isWidthValid = true;\r\n    } else {\r\n        isWidthValid = !isNaN(Number(value.width));\r\n    }\r\n    if (value.height === '?') {\r\n        isHeightValid = true;\r\n    } else {\r\n        isHeightValid = !isNaN(Number(value.height));\r\n    }\r\n    return isWidthValid && isHeightValid;\r\n}\r\n\r\nfunction VideoConverter() {\r\n    const [isUploading, setIsUploading] = useState<boolean>(false);\r\n    const [isDownloading, setIsDownloading] = useState<boolean>(false);\r\n    const [isConverting, setIsConverting] = useState<boolean>(false);\r\n    const [uploadProgress, setUploadProgress] = useState<number>(0);\r\n    const [downloadProgress, setDownloadProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [keepDAR, setKeepDAR] = useState<boolean>(true);\r\n    const [progress, setProgress] = useState<string>('0');\r\n    const [currentSize, setCurrentSize] = useState<sizeType>({ value: { width: '?', height: '720' }, label: '720p' });\r\n    const [histories, setHistories] = useState<{ name: string; time: number }[]>([]);\r\n\r\n    const handleSizeChange = (size: sizeType | null) => {\r\n        if (!size) return;\r\n        setCurrentSize(size);\r\n    }\r\n\r\n    const handleCustomSize = (width: string, height: string) => {\r\n        const { label } = currentSize;\r\n        setCurrentSize({ value: { width, height }, label });\r\n    }\r\n\r\n    const handleButton = async (formData: FormData) => {\r\n\r\n        if (!validateSize(currentSize)) {\r\n            setError(\"Invalid Size\");\r\n            return;\r\n        } else {\r\n            setError(null);\r\n        }\r\n\r\n        formData.append('size', currentSize.value.width + 'x' + currentSize.value.height);\r\n        formData.append('keepDAR', `${keepDAR}`);\r\n        setIsUploading(true);\r\n        setUploadProgress(0);\r\n        setProgress('0');\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'blob',\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n            onUploadProgress: (e) => {\r\n                const _progress = e.loaded * 100 / e.total;\r\n                if (_progress < 99) {\r\n                    setUploadProgress(Number(_progress.toFixed(2)));\r\n                } else {\r\n                    setIsUploading(false);\r\n                    setIsConverting(true);\r\n                }\r\n\r\n            },\r\n            onDownloadProgress: (e)=>{\r\n                if(!isDownloading){\r\n                    setIsDownloading(true);\r\n                    setIsConverting(false);\r\n                }\r\n                const _progress = Number((e.loaded * 100 / e.total).toFixed(2));\r\n                    setDownloadProgress(_progress);\r\n            }\r\n        };\r\n        // const fileName = (formData.get('video')! as any).name as string;\r\n        const socket = socketIOClient(baseURL, {\r\n            withCredentials: true,\r\n        }\r\n        );\r\n\r\n        socket.on('connect', async () => {\r\n            socket.on('PROGRESS', data => {\r\n                setProgress(data.toFixed(2));\r\n            });\r\n            formData.append('socketId', socket.id);\r\n            const response = await instance.post('videoconvert/resize', formData, config);\r\n            socket.disconnect();\r\n            setIsConverting(false);\r\n            setIsDownloading(false);\r\n            const blob = new Blob([response.data]);\r\n            fileDownload(blob, (formData.get('video')! as any).name);\r\n        });\r\n\r\n    }\r\n    const convertExisting = async (fileName: string) => {\r\n\r\n        if (!validateSize(currentSize)) {\r\n            setError(\"Invalid Size\");\r\n            return;\r\n        } else {\r\n            setError(null);\r\n        }\r\n        setIsUploading(true);\r\n        setUploadProgress(0);\r\n        setHistories([]);\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'blob',\r\n            headers: {\r\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n            onUploadProgress: (e) => {\r\n                const progress = e.loaded * 100 / e.total;\r\n                if (progress < 99) {\r\n                    setUploadProgress(progress);\r\n                } else {\r\n                    setIsUploading(false);\r\n                    setIsConverting(true);\r\n                }\r\n\r\n            },\r\n            onDownloadProgress: (e)=>{\r\n                if(!isDownloading){\r\n                    setIsDownloading(true);\r\n                    setIsConverting(false);\r\n                }\r\n                const _progress = Number((e.loaded * 100 / e.total).toFixed(2));\r\n                    setDownloadProgress(_progress);\r\n            }\r\n        };\r\n        const socket = socketIOClient(baseURL, {\r\n            withCredentials: true,\r\n        }\r\n        );\r\n        socket.on('connect', async () => {\r\n            socket.on('PROGRESS', data => {\r\n                setProgress(data.toFixed(2));\r\n            });\r\n            const body = {\r\n                size: currentSize.value.width + 'x' + currentSize.value.height,\r\n                keepDAR: `${keepDAR}`,\r\n                fileName: fileName,\r\n                socketId: socket.id\r\n            };\r\n            const response = await instance.post('videoconvert/resizeExisting', body, config);\r\n            socket.disconnect();\r\n            setIsConverting(false);\r\n            setIsDownloading(false);\r\n            const blob = new Blob([response.data]);\r\n            fileDownload(blob, fileName);\r\n        });\r\n    }\r\n    const getHistory = async () => {\r\n        setIsUploading(true);\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n\r\n        };\r\n        const response = await instance.get('history/video', config);\r\n        setIsUploading(false);\r\n        setHistories(response.data.files);\r\n    }\r\n    const downloadVideo = async (fileName: string) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'blob',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        const response = await instance.get('files/video/' + fileName, config);\r\n        const blob = new Blob([response.data]);\r\n        fileDownload(blob, fileName);\r\n    }\r\n    const deleteVideo = async (fileName: string) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        await instance.delete('files/video/' + fileName, config);\r\n        const response = await instance.get('history/video');\r\n        setIsUploading(false);\r\n        setHistories(response.data.files);\r\n\r\n    }\r\n    const dClasses = [classes.Centered, classes.Button].join(' ');\r\n    let spinner = null;\r\n    let progressMessage = null;\r\n    let downloadAllButton = null;\r\n    let downloadZipButton = null;\r\n    let historyButton = null;\r\n    if (isUploading) {\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = <div className={classes.Centered}>{uploadProgress}% Uploaded</div>;\r\n    } else if (isConverting) {\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = <div className={classes.Centered}> {progress}% Converted</div>;\r\n    }\r\n     else if (isDownloading) {\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = <div className={classes.Centered}> {downloadProgress}% Downloaded</div>;\r\n    }\r\n    else {\r\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\r\n    }\r\n    let customSizeInputs = null;\r\n    if (currentSize.label === 'Custom Size') {\r\n        customSizeInputs = (\r\n            <div className={classes.Centered}>\r\n                <input className={classes.Inputs} onChange={(e) => handleCustomSize(e.target.value, currentSize.value.height)} type=\"text\" id=\"width\" name=\"width\" />\r\n                X\r\n                <input className={classes.Inputs} onChange={(e) => handleCustomSize(currentSize.value.width, e.target.value)} type=\"text\" id=\"height\" name=\"height\" /></div>\r\n        );\r\n\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (error) {\r\n        errorMessage = <div className={classes.Centered}>{error}</div>;\r\n    }\r\n    const historyList = histories.length !== 0 ? <div className={classes.Centered}><MyList iconName='video.png' histories={histories} downloadHandler={downloadVideo} convertExisting={convertExisting} deletePDF={deleteVideo} /></div> : null;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.Grouped}>\r\n                <div className={classes.UploadButton}>\r\n                    <UiFileInputButton\r\n                        label=\"Upload Video\"\r\n                        uploadFileName=\"video\"\r\n                        onChange={handleButton}\r\n                        acceptedFileTypes=\"video/*\"\r\n                    />\r\n                </div>\r\n                <Link to='/'>\r\n                    <div className={classes.Switch}>PDF Converter</div>\r\n                </Link>\r\n            </div>\r\n            {errorMessage}\r\n            <div className={classes.Centered}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={keepDAR} onChange={(e) => setKeepDAR(e.target.checked)} />\r\n                    Keep Aspect Ratio\r\n                </label>\r\n            </div>\r\n            <div className={classes.SelectContainer}>\r\n                <Select className={classes.Select} options={sizeOptions} defaultValue={currentSize} isSearchable={false} onChange={handleSizeChange} />\r\n\r\n            </div>\r\n\r\n            {customSizeInputs}\r\n            {spinner}\r\n            {progressMessage}\r\n            <div className={classes.Centered}>\r\n                {downloadAllButton}\r\n                {downloadZipButton}\r\n                {historyButton}\r\n            </div>\r\n            {historyList}\r\n\r\n            <div className={classes.Clearfix}></div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default VideoConverter;","import { AxiosRequestConfig } from 'axios';\nimport { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { UiFileInputButton } from '../../components/uifileinput';\nimport Spinner from '../../components/spinner';\nimport fileDownload from 'js-file-download';\nimport classes from './PdfConverter.module.css';\nimport MyList from '../../components/lists/lists';\nimport instance, {clientUrl} from '../../utils/axios';\n\nfunction PdfConverter() {\n    const [imgUrls, setImgUrls] = useState<string[]>([]);\n    const [isUploading, setIsUploading] = useState<boolean>(false);\n    const [histories, setHistories] = useState<{ name: string; time: number }[]>([]);\n    const handleAllDownloads = async () => {\n\n        for (let url of imgUrls) {\n            await handleDownload(url);\n        }\n    }\n    const handleZipDownloads = async () => {\n        let fileNames: string[] = [];\n        for (let url of imgUrls) {\n            fileNames.push(url.substring(url.lastIndexOf('/') + 1));\n        }\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.post('convert/zip', { fileNames }, config);\n        const blob = new Blob([response.data]);\n        const zipName = fileNames[0].split('-')[0];\n        fileDownload(blob, zipName.split('.')[0] + '.zip');\n    }\n    const handleDownload = async (url: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n            },\n        };\n        const fileName = url.substring(url.lastIndexOf('/'));\n\n        const response = await instance.get('files/images' + fileName, config);\n        const blob = new Blob([response.data], { type: 'image/jpg' });\n        fileDownload(blob, fileName.substring(1));\n    }\n\n    const handleButton = async (formData: any) => {\n        setIsUploading(true);\n        setImgUrls([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n\n        const response = await instance.post('convert/jpg', formData, config);\n        setIsUploading(false);\n        setImgUrls(response.data.imageUrls);\n    }\n    const getHistory = async () => {\n        setIsUploading(true);\n        setImgUrls([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n\n        };\n        const response = await instance.get('history/pdf', config);\n        setIsUploading(false);\n        setHistories(response.data.files);\n    }\n    const downloadPDF = async (fileName: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.get('files/pdf/' + fileName.replace('.pdf', ''), config);\n        const blob = new Blob([response.data]);\n        fileDownload(blob, fileName);\n    }\n    const convertExisting = async (fileName: string) => {\n        setIsUploading(true);\n        setImgUrls([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.get('convert/jpg/' + fileName.replace('.pdf', ''), config);\n        setIsUploading(false);\n        setImgUrls(response.data.imageUrls);\n    }\n    const deletePDF = async (fileName: string) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        await instance.delete('files/pdf/' + fileName.replace('.pdf', ''), config);\n        const response = await instance.get('history/pdf');\n        setIsUploading(false);\n        setHistories(response.data.files);\n\n    }\n    const dClasses = [classes.Centered, classes.Button].join(' ');\n    let spinner = null;\n    let downloadAllButton = null;\n    let downloadZipButton = null;\n    let historyButton = null;\n    if (isUploading) {\n        spinner = <div className={classes.Centered}><Spinner /></div>;\n    } else {\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\n        if (imgUrls.length !== 0) {\n            downloadAllButton = <div className={dClasses} onClick={() => handleAllDownloads()}>Download All</div>;\n            downloadZipButton = <div className={dClasses} onClick={() => handleZipDownloads()}>Download As Zip</div>;\n        }\n    }\n    const historyList = histories.length !== 0 ? <div className={classes.Centered}><MyList iconName='pdf.png' histories={histories} downloadHandler={downloadPDF} convertExisting={convertExisting} deletePDF={deletePDF} /></div> : null;\n\n\n    return (\n        <div>\n            <div className={classes.Grouped}>\n            <div className={classes.UploadButton}>\n                <UiFileInputButton\n                    label=\"Upload PDF\"\n                    uploadFileName=\"pdf\"\n                    onChange={handleButton}\n                    acceptedFileTypes=\".pdf\"\n                />\n            </div>\n            <Link to='/video'>\n            <div className={classes.Switch}>Video Converter</div>\n            </Link>\n            </div>\n            {spinner}\n            <div className={classes.Centered}>\n                {downloadAllButton}\n                {downloadZipButton}\n                {historyButton}\n            </div>\n\n            {historyList}\n            <div className={classes.Centered}>\n                {\n                    imgUrls.map((url, i) => {\n                        return (\n                            <div className={classes.Responsive} key={i}>\n                                <div className={classes.Gallery}>\n                                    <a target=\"_blank\" rel='noreferrer' href={url}>\n                                        <img src={url} alt={url} width=\"600\" height=\"400\" />\n                                    </a>\n                                    <div className={classes.Button} onClick={() => handleDownload(url)}>Download Page {i + 1}</div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n            <div className={classes.Clearfix}></div>\n\n        </div>\n    );\n}\n\nexport default PdfConverter;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport VideoConverter from \"../video/Video\";\r\nimport PdfConverter from \"../pdf/PdfConverter\";\r\n\r\nconst layout = () => {\r\n    const routes = (\r\n        <Switch>\r\n            <Route path=\"/video\" component={VideoConverter} />\r\n            <Route path=\"/\" exact component={PdfConverter} />\r\n        </Switch>\r\n    );\r\n    return (\r\n        <>\r\n            <main>\r\n                {routes}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default layout;","import React from 'react';\r\nimport Layout from \"./containers/layout/Layout\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n                <Layout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Video_Gallery__2ZM7w\",\"Desc\":\"Video_Desc__kx_hS\",\"Responsive\":\"Video_Responsive__10hNa\",\"Clearfix\":\"Video_Clearfix__2P2t9\",\"Button\":\"Video_Button__1SOW9\",\"UploadButton\":\"Video_UploadButton__2vdbY\",\"Centered\":\"Video_Centered__1e0om\",\"Grouped\":\"Video_Grouped__nQDDq\",\"Switch\":\"Video_Switch__1YWI8\",\"SelectContainer\":\"Video_SelectContainer__3nOsK\",\"Select\":\"Video_Select__1eZ2j\",\"Inputs\":\"Video_Inputs__2w6Sl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"uifileinput_Button__2taRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"spinner_Spinner__1P0xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"PdfConverter_Gallery__2ig8c\",\"Desc\":\"PdfConverter_Desc__2d_2y\",\"Responsive\":\"PdfConverter_Responsive__2PbCB\",\"Clearfix\":\"PdfConverter_Clearfix__22sNi\",\"Button\":\"PdfConverter_Button__2Us6n\",\"UploadButton\":\"PdfConverter_UploadButton__1ODs1\",\"Centered\":\"PdfConverter_Centered__3Jgev\",\"Grouped\":\"PdfConverter_Grouped__1mojt\",\"Switch\":\"PdfConverter_Switch__UDree\"};"],"sourceRoot":""}