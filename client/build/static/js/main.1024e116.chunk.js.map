{"version":3,"sources":["components/lists/l.module.css","components/uifileinput.module.css","components/spinner.module.css","containers/video/Video.module.css","components/uifileinput.tsx","components/spinner.tsx","utils/axios.ts","components/lists/lists.tsx","containers/video/Video.tsx","components/lists/pdf/pdf-history-list.tsx","containers/pdf/PdfConverter.tsx","containers/video/single/Single.tsx","containers/layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx","containers/pdf/PdfConverter.module.css"],"names":["module","exports","UiFileInputButton","props","fileInputRef","React","useRef","formRef","ref","type","onClick","current","click","className","classes","Button","label","accept","acceptedFileTypes","multiple","allowMultipleFiles","name","uploadFileName","onChange","event","target","files","length","formData","FormData","Array","from","forEach","file","append","reset","style","display","defaultProps","Spinner","baseURL","clientUrl","instance","axios","create","MyList","ulClasses","W3ul","W3Card4","join","imgClasses","BarItem","Circle","HideSmall","Img","histories","map","h","humanReadableDate","Date","timestamp","toLocaleDateString","day","month","year","hour","minute","convertMessage","converted","finished","total","Bar","src","iconName","alt","to","id","Large","fileName","data-tip","data-for","data-place","Arrow","deletePDF","Trash","deletePermanently","Converting","sizeOptions","value","validateSize","splitted","split","width","height","isWidthValid","isHeightValid","isNaN","Number","VideoConverter","useState","isUploading","setIsUploading","uploadProgress","setUploadProgress","error","setError","keepDAR","setKeepDAR","sameThumbnail","setSameThumbnail","currentSize","setCurrentSize","currentThumbnailSize","setCurrentThumbnailSize","setHistories","isUploadingToS3","setUploadingToS3","handleButton","a","sizes","thumbnailSizes","size","push","JSON","stringify","config","responseType","headers","onUploadProgress","e","_progress","loaded","toFixed","post","response","data","alert","getHistory","get","deleteVideo","delete","deleteVideoPermanent","dClasses","Centered","spinner","progressMessage","historyButton","sizeSelects","SelectContainer","placeholder","VideoSelect","isMulti","options","thumbnailSizeSelects","ThumbSelect","isDisabled","errorMessage","historyList","Grouped","UploadButton","Switch","checked","Clearfix","PdfHistoryList","href","key","showExisting","status","PdfConverter","convertedImages","setConvertedImages","isUploadingtoS3","setIsUploadingtoS3","handleAllDownloads","img","handleDownload","blob","Blob","fileDownload","downloadAllButton","downloadZipButton","zipName","replace","download","imageData","Responsive","Gallery","rel","page","getResolution","r","rs","withRouter","match","params","videos","setVideos","useEffect","then","res","Right","convertedVideos","filter","v","isThumbnail","generatedThumbnails","items","resolution","thumbItems","layout","routes","path","component","SingleVideo","exact","App","Layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1024e116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Img\":\"l_Img__1JBvO\",\"Button\":\"l_Button__3o1ZD\",\"W3ul\":\"l_W3ul__1BrWz\",\"Bar\":\"l_Bar__2W4XG\",\"BarItem\":\"l_BarItem__26_3X\",\"w3-hide\":\"l_w3-hide__3DZKR\",\"w3-hide-large\":\"l_w3-hide-large__1xZqO\",\"w3-display-right\":\"l_w3-display-right__MVP26\",\"Circle\":\"l_Circle__3rzn0\",\"w3-card\":\"l_w3-card__3ee7w\",\"w3-card-2\":\"l_w3-card-2__2Wtl6\",\"W3Card4\":\"l_W3Card4__1LFfU\",\"w3-small\":\"l_w3-small__zOA5h\",\"Large\":\"l_Large__1eEp_\",\"Xlarge\":\"l_Xlarge__2qk8o\",\"Right\":\"l_Right__3E8oy\",\"White\":\"l_White__11OSF\",\"Trash\":\"l_Trash__1XWdS\",\"Converting\":\"l_Converting__3cH6p\",\"Arrow\":\"l_Arrow__2yFeu\",\"w3-spin\":\"l_w3-spin__3HIB6\",\"fading\":\"l_fading__JOTEx\",\"opac\":\"l_opac__oC9HD\",\"animatetop\":\"l_animatetop__2bngh\",\"animateleft\":\"l_animateleft__NC34X\",\"animateright\":\"l_animateright__3YH2F\",\"animatebottom\":\"l_animatebottom__14fV8\",\"animatezoom\":\"l_animatezoom__24MAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"uifileinput_Button__2taRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"spinner_Spinner__1P0xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Video_Gallery__2ZM7w\",\"Desc\":\"Video_Desc__kx_hS\",\"Responsive\":\"Video_Responsive__10hNa\",\"Clearfix\":\"Video_Clearfix__2P2t9\",\"Button\":\"Video_Button__1SOW9\",\"UploadButton\":\"Video_UploadButton__2vdbY\",\"Centered\":\"Video_Centered__1e0om\",\"Grouped\":\"Video_Grouped__nQDDq\",\"Switch\":\"Video_Switch__1YWI8\",\"SelectContainer\":\"Video_SelectContainer__3nOsK\",\"VideoSelect\":\"Video_VideoSelect__2Wl-3\",\"ThumbSelect\":\"Video_ThumbSelect__12e6l\",\"Inputs\":\"Video_Inputs__2w6Sl\"};","import React from \"react\";\r\nimport classes from './uifileinput.module.css';\r\n\r\nexport interface IProps {\r\n    acceptedFileTypes?: string;\r\n    allowMultipleFiles?: boolean;\r\n    label: string;\r\n    onChange: (formData: FormData) => void;\r\n    uploadFileName: string;\r\n  }\r\n  \r\n  export const UiFileInputButton: React.FC<IProps> = (props) => {\r\n    const fileInputRef = React.useRef<HTMLInputElement | null>(null);\r\n    const formRef = React.useRef<HTMLFormElement | null>(null);\r\n  \r\n    const onClickHandler = () => {\r\n      fileInputRef.current?.click();\r\n    };\r\n  \r\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (!event.target.files?.length) {\r\n        return;\r\n      }\r\n  \r\n      const formData = new FormData();  \r\n      Array.from(event.target.files).forEach((file) => {\r\n        formData.append(event.target.name, file);\r\n      });\r\n  \r\n      props.onChange(formData);\r\n  \r\n      formRef.current?.reset();\r\n    };\r\n  \r\n    return (\r\n      <form ref={formRef}>\r\n        <button type=\"button\" onClick={onClickHandler} className={classes.Button}>\r\n          {props.label}\r\n        </button>\r\n        <input\r\n          accept={props.acceptedFileTypes}\r\n          multiple={props.allowMultipleFiles}\r\n          name={props.uploadFileName}\r\n          onChange={onChangeHandler}\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  UiFileInputButton.defaultProps = {\r\n    acceptedFileTypes: '',\r\n    allowMultipleFiles: false,\r\n  };","import classes from './spinner.module.css';\r\n\r\nfunction Spinner(){\r\n    return (\r\n        <div className={classes.Spinner}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    );\r\n}\r\nexport default Spinner;","import axios from 'axios';\r\n\r\n// export const baseURL = 'http://localhost:8080';\r\nexport const baseURL = 'http://3.232.224.65:8080';\r\n// export const clientUrl = 'http://localhost:3000';\r\nexport const clientUrl = 'http://3.232.224.65:8080';\r\nconst instance = axios.create({\r\nbaseURL,\r\n});\r\n\r\nexport default instance;","import { Link } from 'react-router-dom';\r\nimport classes from './l.module.css';\r\nimport {baseURL} from '../../utils/axios';\r\nimport historyType from '../../interfaces/history';\r\nimport ReactTooltip from 'react-tooltip';\r\ninterface propType {\r\n    histories: historyType[];\r\n    deletePDF: (id: number) => void;\r\n    deletePermanently: (id: number) => void;\r\n    iconName: string;\r\n}\r\n\r\nfunction MyList(props: propType) {\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img].join(' ');\r\n    return (\r\n        <ul className={ulClasses}>\r\n            {props.histories.map(h => {\r\n                const humanReadableDate = new Date(h.timestamp).toLocaleDateString('en-US', {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                });\r\n                let convertMessage = '';\r\n                if(h.converted === 0){\r\n                    convertMessage = `Converting ${h.finished} of ${h.total}`;\r\n                } else if (h.converted === 2){\r\n                    convertMessage = 'Error';\r\n                }\r\n                return (<li className={classes.Bar} key={h.id}>\r\n\r\n                <img src={baseURL + \"/assets/\" + props.iconName} alt=\"video icon\" className={imgClasses} />\r\n                    <Link to={`/video/${h.id}`}>\r\n                    <div className={classes.BarItem}>\r\n                        <span className={classes.Large}>{h.fileName}</span><br />\r\n                        <span>{humanReadableDate}</span>\r\n                    </div>\r\n                    </Link>\r\n                    <div data-tip=\"Clear History\" data-for='clear' data-place='top'>\r\n                    <span className={classes.Arrow} onClick={() => props.deletePDF(h.id)}></span>\r\n                        <ReactTooltip id=\"clear\" />\r\n                    </div>\r\n                    <div data-tip=\"Delete Permanently\" data-for='delete' data-place='top'>\r\n                    <span className={classes.Trash} onClick={() => props.deletePermanently(h.id)}></span>\r\n                    <ReactTooltip id=\"delete\" />\r\n                    </div>\r\n                    {h.converted !== 1 ? <span className={classes.Converting}>{convertMessage}</span> : null}\r\n                </li>);\r\n            })}\r\n\r\n        </ul>\r\n    );\r\n}\r\nexport default MyList;","import { AxiosRequestConfig } from 'axios';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { OptionsType } from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { UiFileInputButton } from '../../components/uifileinput';\r\nimport Spinner from '../../components/spinner';\r\nimport classes from './Video.module.css';\r\nimport instance, {clientUrl } from '../../utils/axios';\r\nimport MyList from '../../components/lists/lists';\r\nimport historyType from '../../interfaces/history';\r\ntype sizeType = {\r\n    value: string;\r\n    label: string;\r\n};\r\nconst sizeOptions: sizeType[] = [\r\n    { value: '?x240', label: '240p' },\r\n    { value: '?x480', label: '480p' },\r\n    { value: '?x720', label: '720p' },\r\n    { value: '?x1080', label: '1080p' },\r\n    { value: '?x2160', label: '2160p' }\r\n];\r\n\r\nconst validateSize = (value: string): boolean => {\r\n    const splitted = value.split('x');\r\n    const width = splitted[0];\r\n    const height = splitted[1];\r\n    if (!width || !height) return false;\r\n    if (width === '?' && height === '?') return false;\r\n    let isWidthValid = false;\r\n    let isHeightValid = false;\r\n    if (width === '?') {\r\n        isWidthValid = true;\r\n    } else {\r\n        isWidthValid = !isNaN(Number(width));\r\n    }\r\n    if (height === '?') {\r\n        isHeightValid = true;\r\n    } else {\r\n        isHeightValid = !isNaN(Number(height));\r\n    }\r\n    return isWidthValid && isHeightValid;\r\n}\r\n\r\nfunction VideoConverter() {\r\n    const [isUploading, setIsUploading] = useState<boolean>(false);\r\n    const [uploadProgress, setUploadProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [keepDAR, setKeepDAR] = useState<boolean>(true);\r\n    const [sameThumbnail, setSameThumbnail] = useState<boolean>(false);\r\n    const [currentSize, setCurrentSize] = useState<OptionsType<sizeType>>([]);\r\n    const [currentThumbnailSize, setCurrentThumbnailSize] = useState<OptionsType<sizeType>>([]);\r\n    const [histories, setHistories] = useState<historyType[]>([]);\r\n    const [isUploadingToS3, setUploadingToS3] = useState<boolean>();\r\n\r\n    const handleSizeChange = (options: OptionsType<sizeType>) => {\r\n        setCurrentSize(options);\r\n    }\r\n\r\n    const handleThumbnailSizeChange = (options: OptionsType<sizeType>) => {\r\n        setCurrentThumbnailSize(options);\r\n    }\r\n    const handleButton = async (formData: FormData) => {\r\n        const sizes = [];\r\n        let thumbnailSizes = [];\r\n        for(let size of currentSize as any[]){\r\n            if(size['__isNew__']){\r\n                if(!validateSize(size.value)){\r\n                    setError(`Invalid Video Resolution Detected. ${size.value}`);\r\n                    return;\r\n                }\r\n                sizes.push(size.value);\r\n            } else {\r\n                sizes.push(size.value);\r\n            }\r\n        }\r\n        if(sameThumbnail){\r\n            thumbnailSizes = [...sizes];\r\n        } else {\r\n            for(let size of currentThumbnailSize as any[]){\r\n                if(size['__isNew__']){\r\n                    if(!validateSize(size.value)){\r\n                        setError(`Invalid Thumbnail Resolution Detected. ${size.value}`);\r\n                        return;\r\n                    }\r\n                    thumbnailSizes.push(size.value);\r\n                } else {\r\n                    thumbnailSizes.push(size.value);\r\n                }\r\n            }\r\n        }\r\n        setError(null);\r\n\r\n        formData.append('sizes', JSON.stringify(sizes));\r\n        formData.append('thumbnailSizes', JSON.stringify(thumbnailSizes));\r\n        formData.append('keepDAR', `${keepDAR}`);\r\n        setIsUploading(true);\r\n        setUploadProgress(0);\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n            onUploadProgress: (e) => {\r\n                const _progress = e.loaded * 100 / e.total;\r\n                if (_progress < 99) {\r\n                    setUploadProgress(Number(_progress.toFixed(2)));\r\n                } else {\r\n                    setIsUploading(false);\r\n                    setUploadProgress(0);\r\n                    setUploadingToS3(true);\r\n                }\r\n            },\r\n        };\r\n        \r\n    const response =  await instance.post('videoconvert/resize', formData, config);\r\n       setUploadingToS3(false);\r\n       if(response.data.error){\r\n        alert(response.data.error);\r\n        return;\r\n    }\r\n    getHistory();\r\n \r\n    }\r\n    const getHistory = async () => {\r\n        setIsUploading(true);\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n\r\n        };\r\n        const response = await instance.get('history/video', config);\r\n        setIsUploading(false);\r\n        if(response.data.error){\r\n            alert(response.data.error);\r\n            return;\r\n        }\r\n        setHistories(response.data.files);\r\n    }\r\n    const deleteVideo = async (id: number) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        await instance.delete('files/video/' + id, config);\r\n        const response = await instance.get('history/video');\r\n        setIsUploading(false);\r\n        if(response.data.error){\r\n            alert(response.data.error);\r\n            return;\r\n        }\r\n        setHistories(response.data.files);\r\n    }\r\n    const deleteVideoPermanent = async (id: number) => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n        };\r\n        await instance.delete('files/videoPermanent/' + id, config);\r\n        const response = await instance.get('history/video');\r\n        setIsUploading(false);\r\n        if(response.data.error){\r\n            alert(response.data.error);\r\n            return;\r\n        }\r\n        setHistories(response.data.files);\r\n    }\r\n    const dClasses = [classes.Centered, classes.Button].join(' ');\r\n    let spinner = null;\r\n    let progressMessage = null;\r\n    let downloadAllButton = null;\r\n    let downloadZipButton = null;\r\n    let historyButton = null;\r\n    if (isUploading) {\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = uploadProgress !== 0 ? <div className={classes.Centered}>{uploadProgress}% Uploaded</div> : null;\r\n    } else if (isUploadingToS3){\r\n        spinner = <div className={classes.Centered}><Spinner /></div>;\r\n        progressMessage = uploadProgress !== 0 ? <div className={classes.Centered}>Uploading to Bucket</div> : null;\r\n    }\r\n    else {\r\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\r\n    }\r\n    const sizeSelects = (\r\n        <div className={classes.SelectContainer}>\r\n        <CreatableSelect placeholder='Select Video Resolutions' className={classes.VideoSelect} isMulti options={sizeOptions}  onChange={handleSizeChange} />\r\n    </div>\r\n    );\r\n    const thumbnailSizeSelects = (\r\n        <div className={classes.SelectContainer}>\r\n        <CreatableSelect placeholder='Select Thumbnail Resolutions' className={classes.ThumbSelect} isMulti options={sizeOptions}  onChange={handleThumbnailSizeChange} isDisabled={sameThumbnail} />\r\n    </div>\r\n    );\r\n\r\n    let errorMessage = null;\r\n    if (error) {\r\n        errorMessage = <div className={classes.Centered}>{error}</div>;\r\n    }\r\n    const historyList = histories.length !== 0 ? <div className={classes.Centered}><MyList iconName='video.png' histories={histories} deletePDF={deleteVideo} deletePermanently={deleteVideoPermanent} /></div> : null;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.Grouped}>\r\n                <div className={classes.UploadButton}>\r\n                    <UiFileInputButton\r\n                        label=\"Upload Video\"\r\n                        uploadFileName=\"video\"\r\n                        onChange={handleButton}\r\n                        acceptedFileTypes=\"video/*\"\r\n                    />\r\n                </div>\r\n                <Link to='/'>\r\n                    <div className={classes.Switch}>PDF Converter</div>\r\n                </Link>\r\n            </div>\r\n            {errorMessage}\r\n            <div className={classes.Centered}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={keepDAR} onChange={(e) => setKeepDAR(e.target.checked)} />\r\n                    Keep Aspect Ratio\r\n                </label>\r\n            </div>\r\n            <div className={classes.Centered}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={sameThumbnail} onChange={(e) => setSameThumbnail(e.target.checked)} />\r\n                    Generate thumbnail same as video resolutions\r\n                </label>\r\n            </div>\r\n            {sizeSelects}\r\n            {thumbnailSizeSelects}\r\n            {spinner}\r\n            {progressMessage}\r\n            <div className={classes.Centered}>\r\n                {downloadAllButton}\r\n                {downloadZipButton}\r\n                {historyButton}\r\n            </div>\r\n            {historyList}\r\n\r\n            <div className={classes.Clearfix}></div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default VideoConverter;","import ReactTooltip from 'react-tooltip';\r\nimport classes from '../l.module.css';\r\nimport {baseURL} from '../../../utils/axios';\r\nimport {pdfHistoryType} from '../../../interfaces/history';\r\ninterface propType {\r\n    histories: pdfHistoryType[];\r\n    deletePDF: (id: number) => void;\r\n    deletePermanently: (id: number) => void;\r\n    showExisting: (id: number) => void;\r\n}\r\n\r\nfunction PdfHistoryList(props: propType) {\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img].join(' ');\r\n    return (\r\n        <ul className={ulClasses}>\r\n            {props.histories.map(h => {\r\n                const humanReadableDate = new Date(h.timestamp).toLocaleDateString('en-US', {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                });\r\n                return (<li className={classes.Bar} key={h.id}>\r\n                    <a href={baseURL + '/files/pdfin/' + h.key}>\r\n\r\n                <img src={baseURL + '/assets/pdf.png'} alt=\"pdf icon\" className={imgClasses} />\r\n                    </a>\r\n                    <div className={classes.BarItem} onClick={() => props.showExisting(h.id)}>\r\n                        <span className={classes.Large}>{h.fileName}</span><br />\r\n                        <span>{humanReadableDate}</span>\r\n                    </div>\r\n                    <div data-tip=\"Clear History\" data-for='clear' data-place='top'>\r\n                    <span className={classes.Arrow} onClick={() => props.deletePDF(h.id)}></span>\r\n                    <ReactTooltip id=\"clear\" />\r\n                    </div>\r\n                    <div data-tip=\"Delete Permanently\" data-for='delete' data-place='top'>\r\n                    <span className={classes.Trash} onClick={() => props.deletePermanently(h.id)}></span>\r\n                    <ReactTooltip id=\"delete\" />\r\n                    </div>\r\n                  \r\n                    {<span className={classes.Converting}>{h.status}</span>}\r\n                </li>);\r\n            })}\r\n\r\n        </ul>\r\n    );\r\n}\r\nexport default PdfHistoryList;","import { AxiosRequestConfig } from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UiFileInputButton } from '../../components/uifileinput';\nimport Spinner from '../../components/spinner';\nimport fileDownload from 'js-file-download';\nimport classes from './PdfConverter.module.css';\nimport instance, { baseURL, clientUrl } from '../../utils/axios';\nimport { pdfHistoryType } from '../../interfaces/history';\nimport PdfHistoryList from '../../components/lists/pdf/pdf-history-list';\nimport { convertedImageType } from '../../interfaces/converted';\n\nfunction PdfConverter() {\n    const [convertedImages, setConvertedImages] = useState<convertedImageType[]>([]);\n    const [isUploading, setIsUploading] = useState<boolean>(false);\n    const [isUploadingtoS3, setIsUploadingtoS3] = useState<boolean>(false);\n    const [histories, setHistories] = useState<pdfHistoryType[]>([]);\n    const [uploadProgress, setUploadProgress] = useState<number>(0);\n    const handleAllDownloads = async () => {\n\n        for (let img of convertedImages) {\n            await handleDownload(img);\n        }\n    }\n    const handleDownload = async (img: convertedImageType) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'blob',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n            },\n        };\n        const response = await instance.get('files/' + img.key, config);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        const blob = new Blob([response.data], { type: 'image/jpg' });\n        fileDownload(blob, img.key);\n    }\n\n    const handleButton = async (formData: any) => {\n        setIsUploading(true);\n        setConvertedImages([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Content-Type': 'multipart/form-data', 'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n            onUploadProgress: (e) => {\n                const _progress = e.loaded * 100 / e.total;\n                if (_progress < 99) {\n                    setUploadProgress(Number(_progress.toFixed(2)));\n                } else {\n                    if (!isUploadingtoS3) {\n                        setIsUploadingtoS3(true);\n                    }\n                }\n            },\n        };\n        const response = await instance.post('convert/jpg', formData, config);\n        setIsUploadingtoS3(false);\n        setIsUploading(false);\n        setUploadProgress(0);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        getHistory();\n    }\n    const getHistory = async () => {\n        setIsUploading(true);\n        setConvertedImages([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n\n        };\n        const response = await instance.get('history/pdf', config);\n        setIsUploading(false);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        setHistories(response.data.files);\n    }\n    const showExisting = async (id: number) => {\n        setIsUploading(true);\n        setConvertedImages([]);\n        setHistories([]);\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        const response = await instance.get('convert/jpg/' + id, config);\n        setIsUploading(false);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        setConvertedImages(response.data.files);\n    }\n    const deletePDF = async (id: number) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        await instance.delete('files/pdf/' + id, config);\n        const response = await instance.get('history/pdf');\n        setIsUploading(false);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        setHistories(response.data.files);\n\n    }\n    const deletePermanently = async (id: number) => {\n        const config: AxiosRequestConfig = {\n            responseType: 'json',\n            headers: {\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'DELETE', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n            },\n        };\n        await instance.delete('files/pdfPermanent/' + id, config);\n        const response = await instance.get('history/pdf');\n        setIsUploading(false);\n        if (response.data.error) {\n            alert(response.data.error);\n            return;\n        }\n        setHistories(response.data.files);\n\n    }\n    const dClasses = [classes.Centered, classes.Button].join(' ');\n    let spinner = null;\n    let downloadAllButton = null;\n    let downloadZipButton = null;\n    let historyButton = null;\n    let progressMessage = null;\n    if (isUploading) {\n        spinner = <div className={classes.Centered}><Spinner /></div>;\n        progressMessage = <div className={classes.Centered}>{isUploadingtoS3 ? 'Uploading to S3' : `${uploadProgress}% Uploaded`}</div>;\n    } else {\n        historyButton = <div className={dClasses} onClick={getHistory}>History</div>;\n        if (convertedImages.length !== 0) {\n            downloadAllButton = <div className={dClasses} onClick={() => handleAllDownloads()}>Download All</div>;\n            const zipName = convertedImages[0].fileName.replace('pdf', 'zip');\n            downloadZipButton = (\n                <a href={baseURL + '/files/pdfout/' + zipName} download>\n                    <div className={dClasses}>Download As Zip</div>\n                </a>\n            );\n        }\n    }\n    const historyList = histories.length !== 0 ? <div className={classes.Centered}><PdfHistoryList histories={histories} deletePDF={deletePDF} deletePermanently={deletePermanently} showExisting={showExisting} /></div> : null;\n\n\n    return (\n        <div>\n            <div className={classes.Grouped}>\n                <div className={classes.UploadButton}>\n                    <UiFileInputButton\n                        label=\"Upload PDF\"\n                        uploadFileName=\"pdf\"\n                        onChange={handleButton}\n                        acceptedFileTypes=\".pdf\"\n                    />\n                </div>\n                <Link to='/video'>\n                    <div className={classes.Switch}>Video Converter</div>\n                </Link>\n            </div>\n            {spinner}\n            {progressMessage}\n            <div className={classes.Centered}>\n                {downloadAllButton}\n                {downloadZipButton}\n                {historyButton}\n            </div>\n\n            {historyList}\n            <div className={classes.Centered}>\n                {\n                    convertedImages.map((imageData) => {\n                        return (\n                            <div className={classes.Responsive} key={imageData.id}>\n                                <div className={classes.Gallery}>\n                                    <a target=\"_blank\" rel='noreferrer' href={`${baseURL}/files/pdfout/${imageData.key}`}>\n                                        <img src={`${baseURL}/files/pdfout/${imageData.key}`} alt={imageData.key} width=\"600\" height=\"400\" />\n                                    </a>\n                                    <a href={`${baseURL}/files/pdfout/${imageData.key}`} download>\n                                        <div className={classes.Button}>Download Page {imageData.page}</div>\n                                    </a>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n            <div className={classes.Clearfix}></div>\n\n        </div>\n    );\n}\n\nexport default PdfConverter;","import { AxiosRequestConfig } from 'axios';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport instance, { baseURL, clientUrl } from '../../../utils/axios';\r\nimport converted from '../../../interfaces/converted';\r\nimport classes from '../../../components/lists/l.module.css';\r\n\r\nconst getResolution = (r: string) => {\r\n    const rs = r.split('x');\r\n    if (rs[0] === '?') return `${rs[1]}p`;\r\n    return rs[0] + ' x ' + rs[1];\r\n}\r\n\r\nfunction SingleVideo(props: RouteComponentProps<{ id: string }>): ReactElement {\r\n    const { id } = props.match.params;\r\n    const [videos, setVideos] = useState<converted[]>([]);\r\n    useEffect(() => {\r\n        const config: AxiosRequestConfig = {\r\n            responseType: 'json',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': clientUrl, 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            },\r\n\r\n        };\r\n        instance.get('videoconvert/converted/' + id, config).then((res) => {\r\n            if(res.data.error){\r\n                alert(res.data.error);\r\n                return;\r\n            }\r\n            setVideos(res.data);\r\n        });\r\n    }, [id]);\r\n    const ulClasses = [classes.W3ul, classes.W3Card4].join(' ');\r\n    const imgClasses = [classes.BarItem, classes.Circle, classes.HideSmall, classes.Img, classes.Right].join(' ');\r\n    const convertedVideos = videos.filter(v => v.isThumbnail === 0);\r\n    const generatedThumbnails = videos.filter(v => v.isThumbnail === 1);\r\n    const items = convertedVideos.map(v => <li className={classes.Bar} key={v.id}>\r\n        <div className={classes.BarItem}>\r\n            <span className={classes.Large}>{v.fileName}</span><br />\r\n            <span>{getResolution(v.resolution)}</span>\r\n        </div>\r\n        <a href={baseURL + '/files/videoout/' + v.key} download>\r\n            <img src={baseURL + \"/assets/download.png\"} alt=\"download\" className={imgClasses} />\r\n        </a>\r\n    </li>);\r\n    const thumbItems = generatedThumbnails.map(v => <li className={classes.Bar} key={v.id}>\r\n        <div className={classes.BarItem}>\r\n            <span className={classes.Large}>{v.fileName}</span><br />\r\n            <span>{getResolution(v.resolution)}</span>\r\n        </div>\r\n        <a href={baseURL + '/files/thumbnail/' + v.key} download>\r\n            <img src={baseURL + \"/assets/download.png\"} alt=\"download\" className={imgClasses} />\r\n        </a>\r\n    </li>);\r\n    return (\r\n        <>\r\n            <div>\r\n                <h3>Converted Videos</h3>\r\n            </div>\r\n            <ul className={ulClasses}>\r\n                {items}\r\n            </ul>\r\n            <div>\r\n                <h3>Generated Thumbnails</h3>\r\n            </div>\r\n            <ul className={ulClasses}>\r\n                {thumbItems}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(SingleVideo);","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport VideoConverter from \"../video/Video\";\r\nimport PdfConverter from \"../pdf/PdfConverter\";\r\nimport SingleVideo from \"../video/single/Single\";\r\n\r\nconst layout = () => {\r\n    const routes = (\r\n        <Switch>\r\n            <Route path=\"/video/:id\" component={SingleVideo} />\r\n            <Route path=\"/video\" component={VideoConverter} />\r\n            <Route path=\"/\" exact component={PdfConverter} />\r\n        </Switch>\r\n    );\r\n    return (\r\n        <>\r\n            <main>\r\n                {routes}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default layout;","import Layout from \"./containers/layout/Layout\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n                <Layout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"PdfConverter_Gallery__2ig8c\",\"Desc\":\"PdfConverter_Desc__2d_2y\",\"Responsive\":\"PdfConverter_Responsive__2PbCB\",\"Clearfix\":\"PdfConverter_Clearfix__22sNi\",\"Button\":\"PdfConverter_Button__2Us6n\",\"UploadButton\":\"PdfConverter_UploadButton__1ODs1\",\"Centered\":\"PdfConverter_Centered__3Jgev\",\"Grouped\":\"PdfConverter_Grouped__1mojt\",\"Switch\":\"PdfConverter_Switch__UDree\"};"],"sourceRoot":""}